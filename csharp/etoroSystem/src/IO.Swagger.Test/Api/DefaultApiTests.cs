/* 
 * eToro System API
 *
 * The System API provides general data on the full eToro System
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        /// <summary>
        /// Test GetAutoComplete
        /// </summary>
        [Test]
        public void GetAutoCompleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string prefix = null;
            //decimal? instrumentCount = null;
            //decimal? userCount = null;
            //instance.GetAutoComplete(prefix, instrumentCount, userCount);
            
        }
        /// <summary>
        /// Test GetDailyPriceChange
        /// </summary>
        [Test]
        public void GetDailyPriceChangeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sort = null;
            //decimal? page = null;
            //decimal? pageSize = null;
            //instance.GetDailyPriceChange(sort, page, pageSize);
            
        }
        /// <summary>
        /// Test GetInsights
        /// </summary>
        [Test]
        public void GetInsightsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string insightType = null;
            //string instrumentIds = null;
            //instance.GetInsights(insightType, instrumentIds);
            
        }
        /// <summary>
        /// Test GetMarketEvents
        /// </summary>
        [Test]
        public void GetMarketEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string minDate = null;
            //string maxDate = null;
            //decimal? page = null;
            //decimal? pageSize = null;
            //instance.GetMarketEvents(minDate, maxDate, page, pageSize);
            
        }
    }

}
