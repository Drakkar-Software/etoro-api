/* 
 * eToro Trading API
 *
 * The Trading API allows the development of the full trading capabilities in the eToro platform
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using IO.Swagger.Client;
using IO.Swagger.Model;

namespace IO.Swagger.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public interface IDefaultApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Exit Order&lt;span&gt; &lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Create Exit Order, will create an exit order in the system
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The following is the structure of the body request

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;PositionId&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The position which I would like to close&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution mode of the exit order. It can be either &#x27;IOC&#x27; for immediate or cancel, or &#x27;GTC&#x27; for good till cancelled&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;(Optional) Number of units to close&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 (optional)</param>
        /// <returns></returns>
        void CreateExitOrder (string system, Object body = null);

        /// <summary>
        /// Exit Order&lt;span&gt; &lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Create Exit Order, will create an exit order in the system
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The following is the structure of the body request

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;PositionId&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The position which I would like to close&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution mode of the exit order. It can be either &#x27;IOC&#x27; for immediate or cancel, or &#x27;GTC&#x27; for good till cancelled&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;(Optional) Number of units to close&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> CreateExitOrderWithHttpInfo (string system, Object body = null);
        /// <summary>
        /// Exit Order&lt;span&gt;&lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Delete Exit Order, will delete an existing exit order from the system
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The exit order id</param>
        /// <returns></returns>
        void DeleteExitOrder (string system, decimal? orderId);

        /// <summary>
        /// Exit Order&lt;span&gt;&lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Delete Exit Order, will delete an existing exit order from the system
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The exit order id</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DeleteExitOrderWithHttpInfo (string system, decimal? orderId);
        /// <summary>
        /// Entry Order&lt;span&gt;&lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Delete Entry Order allows cancellation of an entry order.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The order id which we would like to delete</param>
        /// <param name="body">The body defines which order type to delete

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns></returns>
        void DeleteOrder (string system, decimal? orderId, Object body = null);

        /// <summary>
        /// Entry Order&lt;span&gt;&lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Delete Entry Order allows cancellation of an entry order.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The order id which we would like to delete</param>
        /// <param name="body">The body defines which order type to delete

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DeleteOrderWithHttpInfo (string system, decimal? orderId, Object body = null);
        /// <summary>
        /// Account
        /// </summary>
        /// <remarks>
        /// &lt;br&gt; The account login method provides the ability to login to the eToro system. &lt;br&gt;&lt;br&gt; This operation is essential as it provides the credentials that are needed for subsequent API calls. The username and password are related to an account &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        void DoLogin ();

        /// <summary>
        /// Account
        /// </summary>
        /// <remarks>
        /// &lt;br&gt; The account login method provides the ability to login to the eToro system. &lt;br&gt;&lt;br&gt; This operation is essential as it provides the credentials that are needed for subsequent API calls. The username and password are related to an account &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DoLoginWithHttpInfo ();
        /// <summary>
        /// Account&lt;span&gt;&lt;/span&gt;  
        /// </summary>
        /// <remarks>
        /// &lt;br&gt; The DELETE operation will perform a logoff from the account. &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <returns></returns>
        void DoLogout (string subscriptionKey = null);

        /// <summary>
        /// Account&lt;span&gt;&lt;/span&gt;  
        /// </summary>
        /// <remarks>
        /// &lt;br&gt; The DELETE operation will perform a logoff from the account. &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DoLogoutWithHttpInfo (string subscriptionKey = null);
        /// <summary>
        /// Trade&lt;span&gt;&lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// Editing the trade allows changing the stop loss (rate + trailing property) and the stop loss
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system which we will be using</param>
        /// <param name="positionId">The position ID which we would like to modify</param>
        /// <returns></returns>
        void EditPosition (string system, decimal? positionId);

        /// <summary>
        /// Trade&lt;span&gt;&lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// Editing the trade allows changing the stop loss (rate + trailing property) and the stop loss
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system which we will be using</param>
        /// <param name="positionId">The position ID which we would like to modify</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> EditPositionWithHttpInfo (string system, decimal? positionId);
        /// <summary>
        /// Credit
        /// </summary>
        /// <remarks>
        /// The Credit method returns the current credit in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns></returns>
        void GetCredit (string system);

        /// <summary>
        /// Credit
        /// </summary>
        /// <remarks>
        /// The Credit method returns the current credit in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> GetCreditWithHttpInfo (string system);
        /// <summary>
        /// Equity
        /// </summary>
        /// <remarks>
        /// The Equity method returns the current equity in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns></returns>
        void GetEquity (string system);

        /// <summary>
        /// Equity
        /// </summary>
        /// <remarks>
        /// The Equity method returns the current equity in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> GetEquityWithHttpInfo (string system);
        /// <summary>
        /// Equity History
        /// </summary>
        /// <remarks>
        /// The Historic equity method returns a time-series of the periodic equity of a user &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="period">The Requested Period</param>
        /// <param name="minDate">Minimum Date</param>
        /// <param name="maxDate">Maximum Date</param>
        /// <param name="username">The requested username</param>
        /// <returns></returns>
        void GetEquityHistory (string system, string period, string minDate, string maxDate, string username);

        /// <summary>
        /// Equity History
        /// </summary>
        /// <remarks>
        /// The Historic equity method returns a time-series of the periodic equity of a user &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="period">The Requested Period</param>
        /// <param name="minDate">Minimum Date</param>
        /// <param name="maxDate">Maximum Date</param>
        /// <param name="username">The requested username</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> GetEquityHistoryWithHttpInfo (string system, string period, string minDate, string maxDate, string username);
        /// <summary>
        /// Exit Order
        /// </summary>
        /// <remarks>
        /// The Order returns all the open exit orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns></returns>
        void GetExitOrders (string system);

        /// <summary>
        /// Exit Order
        /// </summary>
        /// <remarks>
        /// The Order returns all the open exit orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> GetExitOrdersWithHttpInfo (string system);
        /// <summary>
        /// Fees
        /// </summary>
        /// <remarks>
        /// The Instruments fees returns the rollover fees that are charged in the system  &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns></returns>
        void GetFees (string system, string instrumentIds = null, string ocpApimSubscriptionKey = null);

        /// <summary>
        /// Fees
        /// </summary>
        /// <remarks>
        /// The Instruments fees returns the rollover fees that are charged in the system  &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> GetFeesWithHttpInfo (string system, string instrumentIds = null, string ocpApimSubscriptionKey = null);
        /// <summary>
        /// Metadata
        /// </summary>
        /// <remarks>
        /// The Instruments metadata returns the trading metadata on assets
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns></returns>
        void GetInstrumentMetadata (string system, string instrumentIds = null, string subscriptionKey = null, string ocpApimSubscriptionKey = null);

        /// <summary>
        /// Metadata
        /// </summary>
        /// <remarks>
        /// The Instruments metadata returns the trading metadata on assets
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> GetInstrumentMetadataWithHttpInfo (string system, string instrumentIds = null, string subscriptionKey = null, string ocpApimSubscriptionKey = null);
        /// <summary>
        /// Entry Order
        /// </summary>
        /// <remarks>
        /// The Order returns all the open orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns></returns>
        void GetOrders (string system);

        /// <summary>
        /// Entry Order
        /// </summary>
        /// <remarks>
        /// The Order returns all the open orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> GetOrdersWithHttpInfo (string system);
        /// <summary>
        /// Trade History
        /// </summary>
        /// <remarks>
        /// The Trade History method returns closed trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="minDate">Minimum date for the historic trades</param>
        /// <param name="page">Requested Page</param>
        /// <param name="pageSize">The number of values per pages which should be returned</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <param name="xToken_">Security Token from Login Operation (optional)</param>
        /// <param name="xCsrfToken">Security Token from Login Operation (optional)</param>
        /// <returns></returns>
        void GetTradeHistory (string system, string minDate, int? page, int? pageSize, string ocpApimSubscriptionKey = null, string xToken_ = null, string xCsrfToken = null);

        /// <summary>
        /// Trade History
        /// </summary>
        /// <remarks>
        /// The Trade History method returns closed trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="minDate">Minimum date for the historic trades</param>
        /// <param name="page">Requested Page</param>
        /// <param name="pageSize">The number of values per pages which should be returned</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <param name="xToken_">Security Token from Login Operation (optional)</param>
        /// <param name="xCsrfToken">Security Token from Login Operation (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> GetTradeHistoryWithHttpInfo (string system, string minDate, int? page, int? pageSize, string ocpApimSubscriptionKey = null, string xToken_ = null, string xCsrfToken = null);
        /// <summary>
        /// Trade
        /// </summary>
        /// <remarks>
        /// The Trade method returns the open trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns></returns>
        void GetTrades (string system, string subscriptionKey = null, string ocpApimSubscriptionKey = null);

        /// <summary>
        /// Trade
        /// </summary>
        /// <remarks>
        /// The Trade method returns the open trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> GetTradesWithHttpInfo (string system, string subscriptionKey = null, string ocpApimSubscriptionKey = null);
        /// <summary>
        /// Entry Order&lt;span&gt; &lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Add Entry Order allows creation of an entry order in the system. There are several types of orders which are available and are defined using the OrderType and ExecutionType parameters. &lt;br&gt;&lt;br&gt; The OrderType parameter may be either Market (abbreviated by MKT) or Limit (abbreviated by LMT). &lt;br&gt;&lt;br&gt; The ExecutionType can be either Good Till Cancelled (abbreviated by GTC) or Immediate or Cancel (abbreviated by IOC) 
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The body defines the actual order

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;InstrumentID&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The Instrument ID on which the order references&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsBuy&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Is the opened position on the buy or sell side&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Leverage&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The requested leverage&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Investment&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The invested amount for the order&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The number of units to buy (either this or the investment are mandatory)&lt;/div&gt;
&lt;/div&gt;


&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution type can be either &#x27;GTC&#x27; for good till cancel orders, or &#x27;IOC&#x27; for immediate of cancel orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;LimitRate&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The limit rate. This is relevant for limit orders LMT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsTrailingStopLoss&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Should the trade be opened with a trailing stop loss&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns></returns>
        void PlaceOrder (string system, Object body = null);

        /// <summary>
        /// Entry Order&lt;span&gt; &lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Add Entry Order allows creation of an entry order in the system. There are several types of orders which are available and are defined using the OrderType and ExecutionType parameters. &lt;br&gt;&lt;br&gt; The OrderType parameter may be either Market (abbreviated by MKT) or Limit (abbreviated by LMT). &lt;br&gt;&lt;br&gt; The ExecutionType can be either Good Till Cancelled (abbreviated by GTC) or Immediate or Cancel (abbreviated by IOC) 
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The body defines the actual order

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;InstrumentID&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The Instrument ID on which the order references&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsBuy&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Is the opened position on the buy or sell side&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Leverage&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The requested leverage&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Investment&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The invested amount for the order&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The number of units to buy (either this or the investment are mandatory)&lt;/div&gt;
&lt;/div&gt;


&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution type can be either &#x27;GTC&#x27; for good till cancel orders, or &#x27;IOC&#x27; for immediate of cancel orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;LimitRate&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The limit rate. This is relevant for limit orders LMT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsTrailingStopLoss&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Should the trade be opened with a trailing stop loss&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> PlaceOrderWithHttpInfo (string system, Object body = null);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// Exit Order&lt;span&gt; &lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Create Exit Order, will create an exit order in the system
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The following is the structure of the body request

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;PositionId&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The position which I would like to close&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution mode of the exit order. It can be either &#x27;IOC&#x27; for immediate or cancel, or &#x27;GTC&#x27; for good till cancelled&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;(Optional) Number of units to close&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task CreateExitOrderAsync (string system, Object body = null);

        /// <summary>
        /// Exit Order&lt;span&gt; &lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Create Exit Order, will create an exit order in the system
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The following is the structure of the body request

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;PositionId&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The position which I would like to close&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution mode of the exit order. It can be either &#x27;IOC&#x27; for immediate or cancel, or &#x27;GTC&#x27; for good till cancelled&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;(Optional) Number of units to close&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> CreateExitOrderAsyncWithHttpInfo (string system, Object body = null);
        /// <summary>
        /// Exit Order&lt;span&gt;&lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Delete Exit Order, will delete an existing exit order from the system
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The exit order id</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DeleteExitOrderAsync (string system, decimal? orderId);

        /// <summary>
        /// Exit Order&lt;span&gt;&lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Delete Exit Order, will delete an existing exit order from the system
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The exit order id</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeleteExitOrderAsyncWithHttpInfo (string system, decimal? orderId);
        /// <summary>
        /// Entry Order&lt;span&gt;&lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Delete Entry Order allows cancellation of an entry order.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The order id which we would like to delete</param>
        /// <param name="body">The body defines which order type to delete

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DeleteOrderAsync (string system, decimal? orderId, Object body = null);

        /// <summary>
        /// Entry Order&lt;span&gt;&lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Delete Entry Order allows cancellation of an entry order.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The order id which we would like to delete</param>
        /// <param name="body">The body defines which order type to delete

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeleteOrderAsyncWithHttpInfo (string system, decimal? orderId, Object body = null);
        /// <summary>
        /// Account
        /// </summary>
        /// <remarks>
        /// &lt;br&gt; The account login method provides the ability to login to the eToro system. &lt;br&gt;&lt;br&gt; This operation is essential as it provides the credentials that are needed for subsequent API calls. The username and password are related to an account &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DoLoginAsync ();

        /// <summary>
        /// Account
        /// </summary>
        /// <remarks>
        /// &lt;br&gt; The account login method provides the ability to login to the eToro system. &lt;br&gt;&lt;br&gt; This operation is essential as it provides the credentials that are needed for subsequent API calls. The username and password are related to an account &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DoLoginAsyncWithHttpInfo ();
        /// <summary>
        /// Account&lt;span&gt;&lt;/span&gt;  
        /// </summary>
        /// <remarks>
        /// &lt;br&gt; The DELETE operation will perform a logoff from the account. &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DoLogoutAsync (string subscriptionKey = null);

        /// <summary>
        /// Account&lt;span&gt;&lt;/span&gt;  
        /// </summary>
        /// <remarks>
        /// &lt;br&gt; The DELETE operation will perform a logoff from the account. &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DoLogoutAsyncWithHttpInfo (string subscriptionKey = null);
        /// <summary>
        /// Trade&lt;span&gt;&lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// Editing the trade allows changing the stop loss (rate + trailing property) and the stop loss
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system which we will be using</param>
        /// <param name="positionId">The position ID which we would like to modify</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task EditPositionAsync (string system, decimal? positionId);

        /// <summary>
        /// Trade&lt;span&gt;&lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// Editing the trade allows changing the stop loss (rate + trailing property) and the stop loss
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system which we will be using</param>
        /// <param name="positionId">The position ID which we would like to modify</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> EditPositionAsyncWithHttpInfo (string system, decimal? positionId);
        /// <summary>
        /// Credit
        /// </summary>
        /// <remarks>
        /// The Credit method returns the current credit in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task GetCreditAsync (string system);

        /// <summary>
        /// Credit
        /// </summary>
        /// <remarks>
        /// The Credit method returns the current credit in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetCreditAsyncWithHttpInfo (string system);
        /// <summary>
        /// Equity
        /// </summary>
        /// <remarks>
        /// The Equity method returns the current equity in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task GetEquityAsync (string system);

        /// <summary>
        /// Equity
        /// </summary>
        /// <remarks>
        /// The Equity method returns the current equity in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetEquityAsyncWithHttpInfo (string system);
        /// <summary>
        /// Equity History
        /// </summary>
        /// <remarks>
        /// The Historic equity method returns a time-series of the periodic equity of a user &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="period">The Requested Period</param>
        /// <param name="minDate">Minimum Date</param>
        /// <param name="maxDate">Maximum Date</param>
        /// <param name="username">The requested username</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task GetEquityHistoryAsync (string system, string period, string minDate, string maxDate, string username);

        /// <summary>
        /// Equity History
        /// </summary>
        /// <remarks>
        /// The Historic equity method returns a time-series of the periodic equity of a user &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="period">The Requested Period</param>
        /// <param name="minDate">Minimum Date</param>
        /// <param name="maxDate">Maximum Date</param>
        /// <param name="username">The requested username</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetEquityHistoryAsyncWithHttpInfo (string system, string period, string minDate, string maxDate, string username);
        /// <summary>
        /// Exit Order
        /// </summary>
        /// <remarks>
        /// The Order returns all the open exit orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task GetExitOrdersAsync (string system);

        /// <summary>
        /// Exit Order
        /// </summary>
        /// <remarks>
        /// The Order returns all the open exit orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetExitOrdersAsyncWithHttpInfo (string system);
        /// <summary>
        /// Fees
        /// </summary>
        /// <remarks>
        /// The Instruments fees returns the rollover fees that are charged in the system  &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task GetFeesAsync (string system, string instrumentIds = null, string ocpApimSubscriptionKey = null);

        /// <summary>
        /// Fees
        /// </summary>
        /// <remarks>
        /// The Instruments fees returns the rollover fees that are charged in the system  &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetFeesAsyncWithHttpInfo (string system, string instrumentIds = null, string ocpApimSubscriptionKey = null);
        /// <summary>
        /// Metadata
        /// </summary>
        /// <remarks>
        /// The Instruments metadata returns the trading metadata on assets
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task GetInstrumentMetadataAsync (string system, string instrumentIds = null, string subscriptionKey = null, string ocpApimSubscriptionKey = null);

        /// <summary>
        /// Metadata
        /// </summary>
        /// <remarks>
        /// The Instruments metadata returns the trading metadata on assets
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetInstrumentMetadataAsyncWithHttpInfo (string system, string instrumentIds = null, string subscriptionKey = null, string ocpApimSubscriptionKey = null);
        /// <summary>
        /// Entry Order
        /// </summary>
        /// <remarks>
        /// The Order returns all the open orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task GetOrdersAsync (string system);

        /// <summary>
        /// Entry Order
        /// </summary>
        /// <remarks>
        /// The Order returns all the open orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetOrdersAsyncWithHttpInfo (string system);
        /// <summary>
        /// Trade History
        /// </summary>
        /// <remarks>
        /// The Trade History method returns closed trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="minDate">Minimum date for the historic trades</param>
        /// <param name="page">Requested Page</param>
        /// <param name="pageSize">The number of values per pages which should be returned</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <param name="xToken_">Security Token from Login Operation (optional)</param>
        /// <param name="xCsrfToken">Security Token from Login Operation (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task GetTradeHistoryAsync (string system, string minDate, int? page, int? pageSize, string ocpApimSubscriptionKey = null, string xToken_ = null, string xCsrfToken = null);

        /// <summary>
        /// Trade History
        /// </summary>
        /// <remarks>
        /// The Trade History method returns closed trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="minDate">Minimum date for the historic trades</param>
        /// <param name="page">Requested Page</param>
        /// <param name="pageSize">The number of values per pages which should be returned</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <param name="xToken_">Security Token from Login Operation (optional)</param>
        /// <param name="xCsrfToken">Security Token from Login Operation (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetTradeHistoryAsyncWithHttpInfo (string system, string minDate, int? page, int? pageSize, string ocpApimSubscriptionKey = null, string xToken_ = null, string xCsrfToken = null);
        /// <summary>
        /// Trade
        /// </summary>
        /// <remarks>
        /// The Trade method returns the open trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task GetTradesAsync (string system, string subscriptionKey = null, string ocpApimSubscriptionKey = null);

        /// <summary>
        /// Trade
        /// </summary>
        /// <remarks>
        /// The Trade method returns the open trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetTradesAsyncWithHttpInfo (string system, string subscriptionKey = null, string ocpApimSubscriptionKey = null);
        /// <summary>
        /// Entry Order&lt;span&gt; &lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Add Entry Order allows creation of an entry order in the system. There are several types of orders which are available and are defined using the OrderType and ExecutionType parameters. &lt;br&gt;&lt;br&gt; The OrderType parameter may be either Market (abbreviated by MKT) or Limit (abbreviated by LMT). &lt;br&gt;&lt;br&gt; The ExecutionType can be either Good Till Cancelled (abbreviated by GTC) or Immediate or Cancel (abbreviated by IOC) 
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The body defines the actual order

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;InstrumentID&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The Instrument ID on which the order references&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsBuy&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Is the opened position on the buy or sell side&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Leverage&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The requested leverage&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Investment&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The invested amount for the order&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The number of units to buy (either this or the investment are mandatory)&lt;/div&gt;
&lt;/div&gt;


&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution type can be either &#x27;GTC&#x27; for good till cancel orders, or &#x27;IOC&#x27; for immediate of cancel orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;LimitRate&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The limit rate. This is relevant for limit orders LMT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsTrailingStopLoss&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Should the trade be opened with a trailing stop loss&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task PlaceOrderAsync (string system, Object body = null);

        /// <summary>
        /// Entry Order&lt;span&gt; &lt;/span&gt;
        /// </summary>
        /// <remarks>
        /// The Add Entry Order allows creation of an entry order in the system. There are several types of orders which are available and are defined using the OrderType and ExecutionType parameters. &lt;br&gt;&lt;br&gt; The OrderType parameter may be either Market (abbreviated by MKT) or Limit (abbreviated by LMT). &lt;br&gt;&lt;br&gt; The ExecutionType can be either Good Till Cancelled (abbreviated by GTC) or Immediate or Cancel (abbreviated by IOC) 
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The body defines the actual order

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;InstrumentID&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The Instrument ID on which the order references&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsBuy&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Is the opened position on the buy or sell side&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Leverage&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The requested leverage&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Investment&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The invested amount for the order&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The number of units to buy (either this or the investment are mandatory)&lt;/div&gt;
&lt;/div&gt;


&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution type can be either &#x27;GTC&#x27; for good till cancel orders, or &#x27;IOC&#x27; for immediate of cancel orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;LimitRate&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The limit rate. This is relevant for limit orders LMT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsTrailingStopLoss&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Should the trade be opened with a trailing stop loss&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> PlaceOrderAsyncWithHttpInfo (string system, Object body = null);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public partial class DefaultApi : IDefaultApi
    {
        private IO.Swagger.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DefaultApi(String basePath)
        {
            this.Configuration = new IO.Swagger.Client.Configuration { BasePath = basePath };

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// </summary>
        /// <returns></returns>
        public DefaultApi()
        {
            this.Configuration = IO.Swagger.Client.Configuration.Default;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DefaultApi(IO.Swagger.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = IO.Swagger.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public IO.Swagger.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public IO.Swagger.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// Exit Order&lt;span&gt; &lt;/span&gt; The Create Exit Order, will create an exit order in the system
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The following is the structure of the body request

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;PositionId&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The position which I would like to close&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution mode of the exit order. It can be either &#x27;IOC&#x27; for immediate or cancel, or &#x27;GTC&#x27; for good till cancelled&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;(Optional) Number of units to close&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 (optional)</param>
        /// <returns></returns>
        public void CreateExitOrder (string system, Object body = null)
        {
             CreateExitOrderWithHttpInfo(system, body);
        }

        /// <summary>
        /// Exit Order&lt;span&gt; &lt;/span&gt; The Create Exit Order, will create an exit order in the system
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The following is the structure of the body request

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;PositionId&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The position which I would like to close&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution mode of the exit order. It can be either &#x27;IOC&#x27; for immediate or cancel, or &#x27;GTC&#x27; for good till cancelled&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;(Optional) Number of units to close&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> CreateExitOrderWithHttpInfo (string system, Object body = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->CreateExitOrder");

            var localVarPath = "/ExitOrder/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateExitOrder", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Exit Order&lt;span&gt; &lt;/span&gt; The Create Exit Order, will create an exit order in the system
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The following is the structure of the body request

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;PositionId&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The position which I would like to close&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution mode of the exit order. It can be either &#x27;IOC&#x27; for immediate or cancel, or &#x27;GTC&#x27; for good till cancelled&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;(Optional) Number of units to close&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task CreateExitOrderAsync (string system, Object body = null)
        {
             await CreateExitOrderAsyncWithHttpInfo(system, body);

        }

        /// <summary>
        /// Exit Order&lt;span&gt; &lt;/span&gt; The Create Exit Order, will create an exit order in the system
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The following is the structure of the body request

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;PositionId&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The position which I would like to close&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution mode of the exit order. It can be either &#x27;IOC&#x27; for immediate or cancel, or &#x27;GTC&#x27; for good till cancelled&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;(Optional) Number of units to close&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> CreateExitOrderAsyncWithHttpInfo (string system, Object body = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->CreateExitOrder");

            var localVarPath = "/ExitOrder/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateExitOrder", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Exit Order&lt;span&gt;&lt;/span&gt; The Delete Exit Order, will delete an existing exit order from the system
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The exit order id</param>
        /// <returns></returns>
        public void DeleteExitOrder (string system, decimal? orderId)
        {
             DeleteExitOrderWithHttpInfo(system, orderId);
        }

        /// <summary>
        /// Exit Order&lt;span&gt;&lt;/span&gt; The Delete Exit Order, will delete an existing exit order from the system
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The exit order id</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> DeleteExitOrderWithHttpInfo (string system, decimal? orderId)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->DeleteExitOrder");
            // verify the required parameter 'orderId' is set
            if (orderId == null)
                throw new ApiException(400, "Missing required parameter 'orderId' when calling DefaultApi->DeleteExitOrder");

            var localVarPath = "/ExitOrder/{System}/{OrderId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (orderId != null) localVarPathParams.Add("OrderId", this.Configuration.ApiClient.ParameterToString(orderId)); // path parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteExitOrder", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Exit Order&lt;span&gt;&lt;/span&gt; The Delete Exit Order, will delete an existing exit order from the system
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The exit order id</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DeleteExitOrderAsync (string system, decimal? orderId)
        {
             await DeleteExitOrderAsyncWithHttpInfo(system, orderId);

        }

        /// <summary>
        /// Exit Order&lt;span&gt;&lt;/span&gt; The Delete Exit Order, will delete an existing exit order from the system
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The exit order id</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> DeleteExitOrderAsyncWithHttpInfo (string system, decimal? orderId)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->DeleteExitOrder");
            // verify the required parameter 'orderId' is set
            if (orderId == null)
                throw new ApiException(400, "Missing required parameter 'orderId' when calling DefaultApi->DeleteExitOrder");

            var localVarPath = "/ExitOrder/{System}/{OrderId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (orderId != null) localVarPathParams.Add("OrderId", this.Configuration.ApiClient.ParameterToString(orderId)); // path parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteExitOrder", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Entry Order&lt;span&gt;&lt;/span&gt; The Delete Entry Order allows cancellation of an entry order.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The order id which we would like to delete</param>
        /// <param name="body">The body defines which order type to delete

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns></returns>
        public void DeleteOrder (string system, decimal? orderId, Object body = null)
        {
             DeleteOrderWithHttpInfo(system, orderId, body);
        }

        /// <summary>
        /// Entry Order&lt;span&gt;&lt;/span&gt; The Delete Entry Order allows cancellation of an entry order.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The order id which we would like to delete</param>
        /// <param name="body">The body defines which order type to delete

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> DeleteOrderWithHttpInfo (string system, decimal? orderId, Object body = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->DeleteOrder");
            // verify the required parameter 'orderId' is set
            if (orderId == null)
                throw new ApiException(400, "Missing required parameter 'orderId' when calling DefaultApi->DeleteOrder");

            var localVarPath = "/EntryOrder/{System}/{OrderId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (orderId != null) localVarPathParams.Add("OrderId", this.Configuration.ApiClient.ParameterToString(orderId)); // path parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteOrder", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Entry Order&lt;span&gt;&lt;/span&gt; The Delete Entry Order allows cancellation of an entry order.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The order id which we would like to delete</param>
        /// <param name="body">The body defines which order type to delete

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DeleteOrderAsync (string system, decimal? orderId, Object body = null)
        {
             await DeleteOrderAsyncWithHttpInfo(system, orderId, body);

        }

        /// <summary>
        /// Entry Order&lt;span&gt;&lt;/span&gt; The Delete Entry Order allows cancellation of an entry order.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="orderId">The order id which we would like to delete</param>
        /// <param name="body">The body defines which order type to delete

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> DeleteOrderAsyncWithHttpInfo (string system, decimal? orderId, Object body = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->DeleteOrder");
            // verify the required parameter 'orderId' is set
            if (orderId == null)
                throw new ApiException(400, "Missing required parameter 'orderId' when calling DefaultApi->DeleteOrder");

            var localVarPath = "/EntryOrder/{System}/{OrderId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (orderId != null) localVarPathParams.Add("OrderId", this.Configuration.ApiClient.ParameterToString(orderId)); // path parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteOrder", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Account &lt;br&gt; The account login method provides the ability to login to the eToro system. &lt;br&gt;&lt;br&gt; This operation is essential as it provides the credentials that are needed for subsequent API calls. The username and password are related to an account &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        public void DoLogin ()
        {
             DoLoginWithHttpInfo();
        }

        /// <summary>
        /// Account &lt;br&gt; The account login method provides the ability to login to the eToro system. &lt;br&gt;&lt;br&gt; This operation is essential as it provides the credentials that are needed for subsequent API calls. The username and password are related to an account &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> DoLoginWithHttpInfo ()
        {

            var localVarPath = "/Account/Login";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DoLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Account &lt;br&gt; The account login method provides the ability to login to the eToro system. &lt;br&gt;&lt;br&gt; This operation is essential as it provides the credentials that are needed for subsequent API calls. The username and password are related to an account &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DoLoginAsync ()
        {
             await DoLoginAsyncWithHttpInfo();

        }

        /// <summary>
        /// Account &lt;br&gt; The account login method provides the ability to login to the eToro system. &lt;br&gt;&lt;br&gt; This operation is essential as it provides the credentials that are needed for subsequent API calls. The username and password are related to an account &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> DoLoginAsyncWithHttpInfo ()
        {

            var localVarPath = "/Account/Login";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DoLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Account&lt;span&gt;&lt;/span&gt;   &lt;br&gt; The DELETE operation will perform a logoff from the account. &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <returns></returns>
        public void DoLogout (string subscriptionKey = null)
        {
             DoLogoutWithHttpInfo(subscriptionKey);
        }

        /// <summary>
        /// Account&lt;span&gt;&lt;/span&gt;   &lt;br&gt; The DELETE operation will perform a logoff from the account. &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> DoLogoutWithHttpInfo (string subscriptionKey = null)
        {

            var localVarPath = "/Account/Login";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (subscriptionKey != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", subscriptionKey)); // query parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DoLogout", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Account&lt;span&gt;&lt;/span&gt;   &lt;br&gt; The DELETE operation will perform a logoff from the account. &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DoLogoutAsync (string subscriptionKey = null)
        {
             await DoLogoutAsyncWithHttpInfo(subscriptionKey);

        }

        /// <summary>
        /// Account&lt;span&gt;&lt;/span&gt;   &lt;br&gt; The DELETE operation will perform a logoff from the account. &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> DoLogoutAsyncWithHttpInfo (string subscriptionKey = null)
        {

            var localVarPath = "/Account/Login";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (subscriptionKey != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", subscriptionKey)); // query parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DoLogout", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Trade&lt;span&gt;&lt;/span&gt; Editing the trade allows changing the stop loss (rate + trailing property) and the stop loss
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system which we will be using</param>
        /// <param name="positionId">The position ID which we would like to modify</param>
        /// <returns></returns>
        public void EditPosition (string system, decimal? positionId)
        {
             EditPositionWithHttpInfo(system, positionId);
        }

        /// <summary>
        /// Trade&lt;span&gt;&lt;/span&gt; Editing the trade allows changing the stop loss (rate + trailing property) and the stop loss
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system which we will be using</param>
        /// <param name="positionId">The position ID which we would like to modify</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> EditPositionWithHttpInfo (string system, decimal? positionId)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->EditPosition");
            // verify the required parameter 'positionId' is set
            if (positionId == null)
                throw new ApiException(400, "Missing required parameter 'positionId' when calling DefaultApi->EditPosition");

            var localVarPath = "/Trade/{System}/{PositionId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (positionId != null) localVarPathParams.Add("PositionId", this.Configuration.ApiClient.ParameterToString(positionId)); // path parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("EditPosition", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Trade&lt;span&gt;&lt;/span&gt; Editing the trade allows changing the stop loss (rate + trailing property) and the stop loss
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system which we will be using</param>
        /// <param name="positionId">The position ID which we would like to modify</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task EditPositionAsync (string system, decimal? positionId)
        {
             await EditPositionAsyncWithHttpInfo(system, positionId);

        }

        /// <summary>
        /// Trade&lt;span&gt;&lt;/span&gt; Editing the trade allows changing the stop loss (rate + trailing property) and the stop loss
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system which we will be using</param>
        /// <param name="positionId">The position ID which we would like to modify</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> EditPositionAsyncWithHttpInfo (string system, decimal? positionId)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->EditPosition");
            // verify the required parameter 'positionId' is set
            if (positionId == null)
                throw new ApiException(400, "Missing required parameter 'positionId' when calling DefaultApi->EditPosition");

            var localVarPath = "/Trade/{System}/{PositionId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (positionId != null) localVarPathParams.Add("PositionId", this.Configuration.ApiClient.ParameterToString(positionId)); // path parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("EditPosition", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Credit The Credit method returns the current credit in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns></returns>
        public void GetCredit (string system)
        {
             GetCreditWithHttpInfo(system);
        }

        /// <summary>
        /// Credit The Credit method returns the current credit in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> GetCreditWithHttpInfo (string system)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetCredit");

            var localVarPath = "/Credit/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetCredit", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Credit The Credit method returns the current credit in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task GetCreditAsync (string system)
        {
             await GetCreditAsyncWithHttpInfo(system);

        }

        /// <summary>
        /// Credit The Credit method returns the current credit in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetCreditAsyncWithHttpInfo (string system)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetCredit");

            var localVarPath = "/Credit/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetCredit", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Equity The Equity method returns the current equity in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns></returns>
        public void GetEquity (string system)
        {
             GetEquityWithHttpInfo(system);
        }

        /// <summary>
        /// Equity The Equity method returns the current equity in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> GetEquityWithHttpInfo (string system)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetEquity");

            var localVarPath = "/Equity/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetEquity", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Equity The Equity method returns the current equity in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task GetEquityAsync (string system)
        {
             await GetEquityAsyncWithHttpInfo(system);

        }

        /// <summary>
        /// Equity The Equity method returns the current equity in the user account &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetEquityAsyncWithHttpInfo (string system)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetEquity");

            var localVarPath = "/Equity/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetEquity", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Equity History The Historic equity method returns a time-series of the periodic equity of a user &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="period">The Requested Period</param>
        /// <param name="minDate">Minimum Date</param>
        /// <param name="maxDate">Maximum Date</param>
        /// <param name="username">The requested username</param>
        /// <returns></returns>
        public void GetEquityHistory (string system, string period, string minDate, string maxDate, string username)
        {
             GetEquityHistoryWithHttpInfo(system, period, minDate, maxDate, username);
        }

        /// <summary>
        /// Equity History The Historic equity method returns a time-series of the periodic equity of a user &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="period">The Requested Period</param>
        /// <param name="minDate">Minimum Date</param>
        /// <param name="maxDate">Maximum Date</param>
        /// <param name="username">The requested username</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> GetEquityHistoryWithHttpInfo (string system, string period, string minDate, string maxDate, string username)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetEquityHistory");
            // verify the required parameter 'period' is set
            if (period == null)
                throw new ApiException(400, "Missing required parameter 'period' when calling DefaultApi->GetEquityHistory");
            // verify the required parameter 'minDate' is set
            if (minDate == null)
                throw new ApiException(400, "Missing required parameter 'minDate' when calling DefaultApi->GetEquityHistory");
            // verify the required parameter 'maxDate' is set
            if (maxDate == null)
                throw new ApiException(400, "Missing required parameter 'maxDate' when calling DefaultApi->GetEquityHistory");
            // verify the required parameter 'username' is set
            if (username == null)
                throw new ApiException(400, "Missing required parameter 'username' when calling DefaultApi->GetEquityHistory");

            var localVarPath = "/Equity/{System}/History/{Period}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (period != null) localVarPathParams.Add("Period", this.Configuration.ApiClient.ParameterToString(period)); // path parameter
            if (minDate != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "MinDate", minDate)); // query parameter
            if (maxDate != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "MaxDate", maxDate)); // query parameter
            if (username != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "Username", username)); // query parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetEquityHistory", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Equity History The Historic equity method returns a time-series of the periodic equity of a user &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="period">The Requested Period</param>
        /// <param name="minDate">Minimum Date</param>
        /// <param name="maxDate">Maximum Date</param>
        /// <param name="username">The requested username</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task GetEquityHistoryAsync (string system, string period, string minDate, string maxDate, string username)
        {
             await GetEquityHistoryAsyncWithHttpInfo(system, period, minDate, maxDate, username);

        }

        /// <summary>
        /// Equity History The Historic equity method returns a time-series of the periodic equity of a user &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="period">The Requested Period</param>
        /// <param name="minDate">Minimum Date</param>
        /// <param name="maxDate">Maximum Date</param>
        /// <param name="username">The requested username</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetEquityHistoryAsyncWithHttpInfo (string system, string period, string minDate, string maxDate, string username)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetEquityHistory");
            // verify the required parameter 'period' is set
            if (period == null)
                throw new ApiException(400, "Missing required parameter 'period' when calling DefaultApi->GetEquityHistory");
            // verify the required parameter 'minDate' is set
            if (minDate == null)
                throw new ApiException(400, "Missing required parameter 'minDate' when calling DefaultApi->GetEquityHistory");
            // verify the required parameter 'maxDate' is set
            if (maxDate == null)
                throw new ApiException(400, "Missing required parameter 'maxDate' when calling DefaultApi->GetEquityHistory");
            // verify the required parameter 'username' is set
            if (username == null)
                throw new ApiException(400, "Missing required parameter 'username' when calling DefaultApi->GetEquityHistory");

            var localVarPath = "/Equity/{System}/History/{Period}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (period != null) localVarPathParams.Add("Period", this.Configuration.ApiClient.ParameterToString(period)); // path parameter
            if (minDate != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "MinDate", minDate)); // query parameter
            if (maxDate != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "MaxDate", maxDate)); // query parameter
            if (username != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "Username", username)); // query parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetEquityHistory", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Exit Order The Order returns all the open exit orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns></returns>
        public void GetExitOrders (string system)
        {
             GetExitOrdersWithHttpInfo(system);
        }

        /// <summary>
        /// Exit Order The Order returns all the open exit orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> GetExitOrdersWithHttpInfo (string system)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetExitOrders");

            var localVarPath = "/ExitOrder/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetExitOrders", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Exit Order The Order returns all the open exit orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task GetExitOrdersAsync (string system)
        {
             await GetExitOrdersAsyncWithHttpInfo(system);

        }

        /// <summary>
        /// Exit Order The Order returns all the open exit orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetExitOrdersAsyncWithHttpInfo (string system)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetExitOrders");

            var localVarPath = "/ExitOrder/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetExitOrders", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Fees The Instruments fees returns the rollover fees that are charged in the system  &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns></returns>
        public void GetFees (string system, string instrumentIds = null, string ocpApimSubscriptionKey = null)
        {
             GetFeesWithHttpInfo(system, instrumentIds, ocpApimSubscriptionKey);
        }

        /// <summary>
        /// Fees The Instruments fees returns the rollover fees that are charged in the system  &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> GetFeesWithHttpInfo (string system, string instrumentIds = null, string ocpApimSubscriptionKey = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetFees");

            var localVarPath = "/Fees/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (instrumentIds != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "InstrumentIds", instrumentIds)); // query parameter
            if (ocpApimSubscriptionKey != null) localVarHeaderParams.Add("Ocp-Apim-Subscription-Key", this.Configuration.ApiClient.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetFees", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Fees The Instruments fees returns the rollover fees that are charged in the system  &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task GetFeesAsync (string system, string instrumentIds = null, string ocpApimSubscriptionKey = null)
        {
             await GetFeesAsyncWithHttpInfo(system, instrumentIds, ocpApimSubscriptionKey);

        }

        /// <summary>
        /// Fees The Instruments fees returns the rollover fees that are charged in the system  &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetFeesAsyncWithHttpInfo (string system, string instrumentIds = null, string ocpApimSubscriptionKey = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetFees");

            var localVarPath = "/Fees/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (instrumentIds != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "InstrumentIds", instrumentIds)); // query parameter
            if (ocpApimSubscriptionKey != null) localVarHeaderParams.Add("Ocp-Apim-Subscription-Key", this.Configuration.ApiClient.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetFees", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Metadata The Instruments metadata returns the trading metadata on assets
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns></returns>
        public void GetInstrumentMetadata (string system, string instrumentIds = null, string subscriptionKey = null, string ocpApimSubscriptionKey = null)
        {
             GetInstrumentMetadataWithHttpInfo(system, instrumentIds, subscriptionKey, ocpApimSubscriptionKey);
        }

        /// <summary>
        /// Metadata The Instruments metadata returns the trading metadata on assets
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> GetInstrumentMetadataWithHttpInfo (string system, string instrumentIds = null, string subscriptionKey = null, string ocpApimSubscriptionKey = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetInstrumentMetadata");

            var localVarPath = "/Metadata/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (instrumentIds != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "InstrumentIds", instrumentIds)); // query parameter
            if (subscriptionKey != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", subscriptionKey)); // query parameter
            if (ocpApimSubscriptionKey != null) localVarHeaderParams.Add("Ocp-Apim-Subscription-Key", this.Configuration.ApiClient.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetInstrumentMetadata", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Metadata The Instruments metadata returns the trading metadata on assets
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task GetInstrumentMetadataAsync (string system, string instrumentIds = null, string subscriptionKey = null, string ocpApimSubscriptionKey = null)
        {
             await GetInstrumentMetadataAsyncWithHttpInfo(system, instrumentIds, subscriptionKey, ocpApimSubscriptionKey);

        }

        /// <summary>
        /// Metadata The Instruments metadata returns the trading metadata on assets
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The trading system. </param>
        /// <param name="instrumentIds">Optional list of instrument ids. The list should be comma delimited (optional)</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetInstrumentMetadataAsyncWithHttpInfo (string system, string instrumentIds = null, string subscriptionKey = null, string ocpApimSubscriptionKey = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetInstrumentMetadata");

            var localVarPath = "/Metadata/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (instrumentIds != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "InstrumentIds", instrumentIds)); // query parameter
            if (subscriptionKey != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", subscriptionKey)); // query parameter
            if (ocpApimSubscriptionKey != null) localVarHeaderParams.Add("Ocp-Apim-Subscription-Key", this.Configuration.ApiClient.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetInstrumentMetadata", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Entry Order The Order returns all the open orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns></returns>
        public void GetOrders (string system)
        {
             GetOrdersWithHttpInfo(system);
        }

        /// <summary>
        /// Entry Order The Order returns all the open orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> GetOrdersWithHttpInfo (string system)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetOrders");

            var localVarPath = "/EntryOrder/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetOrders", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Entry Order The Order returns all the open orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task GetOrdersAsync (string system)
        {
             await GetOrdersAsyncWithHttpInfo(system);

        }

        /// <summary>
        /// Entry Order The Order returns all the open orders in the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetOrdersAsyncWithHttpInfo (string system)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetOrders");

            var localVarPath = "/EntryOrder/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetOrders", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Trade History The Trade History method returns closed trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="minDate">Minimum date for the historic trades</param>
        /// <param name="page">Requested Page</param>
        /// <param name="pageSize">The number of values per pages which should be returned</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <param name="xToken_">Security Token from Login Operation (optional)</param>
        /// <param name="xCsrfToken">Security Token from Login Operation (optional)</param>
        /// <returns></returns>
        public void GetTradeHistory (string system, string minDate, int? page, int? pageSize, string ocpApimSubscriptionKey = null, string xToken_ = null, string xCsrfToken = null)
        {
             GetTradeHistoryWithHttpInfo(system, minDate, page, pageSize, ocpApimSubscriptionKey, xToken_, xCsrfToken);
        }

        /// <summary>
        /// Trade History The Trade History method returns closed trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="minDate">Minimum date for the historic trades</param>
        /// <param name="page">Requested Page</param>
        /// <param name="pageSize">The number of values per pages which should be returned</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <param name="xToken_">Security Token from Login Operation (optional)</param>
        /// <param name="xCsrfToken">Security Token from Login Operation (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> GetTradeHistoryWithHttpInfo (string system, string minDate, int? page, int? pageSize, string ocpApimSubscriptionKey = null, string xToken_ = null, string xCsrfToken = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetTradeHistory");
            // verify the required parameter 'minDate' is set
            if (minDate == null)
                throw new ApiException(400, "Missing required parameter 'minDate' when calling DefaultApi->GetTradeHistory");
            // verify the required parameter 'page' is set
            if (page == null)
                throw new ApiException(400, "Missing required parameter 'page' when calling DefaultApi->GetTradeHistory");
            // verify the required parameter 'pageSize' is set
            if (pageSize == null)
                throw new ApiException(400, "Missing required parameter 'pageSize' when calling DefaultApi->GetTradeHistory");

            var localVarPath = "/Trade/{System}/History";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (minDate != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "MinDate", minDate)); // query parameter
            if (page != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "Page", page)); // query parameter
            if (pageSize != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "PageSize", pageSize)); // query parameter
            if (ocpApimSubscriptionKey != null) localVarHeaderParams.Add("Ocp-Apim-Subscription-Key", this.Configuration.ApiClient.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            if (xToken_ != null) localVarHeaderParams.Add("x-token ", this.Configuration.ApiClient.ParameterToString(xToken_)); // header parameter
            if (xCsrfToken != null) localVarHeaderParams.Add("x-csrf-token", this.Configuration.ApiClient.ParameterToString(xCsrfToken)); // header parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetTradeHistory", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Trade History The Trade History method returns closed trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="minDate">Minimum date for the historic trades</param>
        /// <param name="page">Requested Page</param>
        /// <param name="pageSize">The number of values per pages which should be returned</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <param name="xToken_">Security Token from Login Operation (optional)</param>
        /// <param name="xCsrfToken">Security Token from Login Operation (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task GetTradeHistoryAsync (string system, string minDate, int? page, int? pageSize, string ocpApimSubscriptionKey = null, string xToken_ = null, string xCsrfToken = null)
        {
             await GetTradeHistoryAsyncWithHttpInfo(system, minDate, page, pageSize, ocpApimSubscriptionKey, xToken_, xCsrfToken);

        }

        /// <summary>
        /// Trade History The Trade History method returns closed trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="minDate">Minimum date for the historic trades</param>
        /// <param name="page">Requested Page</param>
        /// <param name="pageSize">The number of values per pages which should be returned</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <param name="xToken_">Security Token from Login Operation (optional)</param>
        /// <param name="xCsrfToken">Security Token from Login Operation (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetTradeHistoryAsyncWithHttpInfo (string system, string minDate, int? page, int? pageSize, string ocpApimSubscriptionKey = null, string xToken_ = null, string xCsrfToken = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetTradeHistory");
            // verify the required parameter 'minDate' is set
            if (minDate == null)
                throw new ApiException(400, "Missing required parameter 'minDate' when calling DefaultApi->GetTradeHistory");
            // verify the required parameter 'page' is set
            if (page == null)
                throw new ApiException(400, "Missing required parameter 'page' when calling DefaultApi->GetTradeHistory");
            // verify the required parameter 'pageSize' is set
            if (pageSize == null)
                throw new ApiException(400, "Missing required parameter 'pageSize' when calling DefaultApi->GetTradeHistory");

            var localVarPath = "/Trade/{System}/History";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (minDate != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "MinDate", minDate)); // query parameter
            if (page != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "Page", page)); // query parameter
            if (pageSize != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "PageSize", pageSize)); // query parameter
            if (ocpApimSubscriptionKey != null) localVarHeaderParams.Add("Ocp-Apim-Subscription-Key", this.Configuration.ApiClient.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            if (xToken_ != null) localVarHeaderParams.Add("x-token ", this.Configuration.ApiClient.ParameterToString(xToken_)); // header parameter
            if (xCsrfToken != null) localVarHeaderParams.Add("x-csrf-token", this.Configuration.ApiClient.ParameterToString(xCsrfToken)); // header parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetTradeHistory", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Trade The Trade method returns the open trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns></returns>
        public void GetTrades (string system, string subscriptionKey = null, string ocpApimSubscriptionKey = null)
        {
             GetTradesWithHttpInfo(system, subscriptionKey, ocpApimSubscriptionKey);
        }

        /// <summary>
        /// Trade The Trade method returns the open trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> GetTradesWithHttpInfo (string system, string subscriptionKey = null, string ocpApimSubscriptionKey = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetTrades");

            var localVarPath = "/Trade/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (subscriptionKey != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", subscriptionKey)); // query parameter
            if (ocpApimSubscriptionKey != null) localVarHeaderParams.Add("Ocp-Apim-Subscription-Key", this.Configuration.ApiClient.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetTrades", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Trade The Trade method returns the open trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task GetTradesAsync (string system, string subscriptionKey = null, string ocpApimSubscriptionKey = null)
        {
             await GetTradesAsyncWithHttpInfo(system, subscriptionKey, ocpApimSubscriptionKey);

        }

        /// <summary>
        /// Trade The Trade method returns the open trades of the user according to the system &lt;br&gt;&lt;br&gt; It is important to note that the values of &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-token&lt;/span&gt; and &lt;span class&#x3D;\&quot;emph\&quot;&gt;x-csrf-token&lt;/span&gt; must be sent as headers to this request. These values were returned from the &lt;a href&#x3D;\&quot;https://api-portal.etoro.com/docs/services/58982f8b7dfd940ef4e0157d/operations/589831007dfd940ef4e0157e\&quot;&gt;Account/Login &lt;span class&#x3D;\&quot;badge badge-warning\&quot;&gt;POST&lt;/span&gt;&lt;/a&gt; command &lt;br&gt;&lt;br&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="subscriptionKey">subscription key in url (optional)</param>
        /// <param name="ocpApimSubscriptionKey">subscription key in header (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetTradesAsyncWithHttpInfo (string system, string subscriptionKey = null, string ocpApimSubscriptionKey = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->GetTrades");

            var localVarPath = "/Trade/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (subscriptionKey != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", subscriptionKey)); // query parameter
            if (ocpApimSubscriptionKey != null) localVarHeaderParams.Add("Ocp-Apim-Subscription-Key", this.Configuration.ApiClient.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetTrades", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Entry Order&lt;span&gt; &lt;/span&gt; The Add Entry Order allows creation of an entry order in the system. There are several types of orders which are available and are defined using the OrderType and ExecutionType parameters. &lt;br&gt;&lt;br&gt; The OrderType parameter may be either Market (abbreviated by MKT) or Limit (abbreviated by LMT). &lt;br&gt;&lt;br&gt; The ExecutionType can be either Good Till Cancelled (abbreviated by GTC) or Immediate or Cancel (abbreviated by IOC) 
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The body defines the actual order

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;InstrumentID&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The Instrument ID on which the order references&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsBuy&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Is the opened position on the buy or sell side&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Leverage&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The requested leverage&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Investment&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The invested amount for the order&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The number of units to buy (either this or the investment are mandatory)&lt;/div&gt;
&lt;/div&gt;


&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution type can be either &#x27;GTC&#x27; for good till cancel orders, or &#x27;IOC&#x27; for immediate of cancel orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;LimitRate&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The limit rate. This is relevant for limit orders LMT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsTrailingStopLoss&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Should the trade be opened with a trailing stop loss&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns></returns>
        public void PlaceOrder (string system, Object body = null)
        {
             PlaceOrderWithHttpInfo(system, body);
        }

        /// <summary>
        /// Entry Order&lt;span&gt; &lt;/span&gt; The Add Entry Order allows creation of an entry order in the system. There are several types of orders which are available and are defined using the OrderType and ExecutionType parameters. &lt;br&gt;&lt;br&gt; The OrderType parameter may be either Market (abbreviated by MKT) or Limit (abbreviated by LMT). &lt;br&gt;&lt;br&gt; The ExecutionType can be either Good Till Cancelled (abbreviated by GTC) or Immediate or Cancel (abbreviated by IOC) 
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The body defines the actual order

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;InstrumentID&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The Instrument ID on which the order references&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsBuy&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Is the opened position on the buy or sell side&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Leverage&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The requested leverage&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Investment&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The invested amount for the order&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The number of units to buy (either this or the investment are mandatory)&lt;/div&gt;
&lt;/div&gt;


&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution type can be either &#x27;GTC&#x27; for good till cancel orders, or &#x27;IOC&#x27; for immediate of cancel orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;LimitRate&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The limit rate. This is relevant for limit orders LMT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsTrailingStopLoss&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Should the trade be opened with a trailing stop loss&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> PlaceOrderWithHttpInfo (string system, Object body = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->PlaceOrder");

            var localVarPath = "/EntryOrder/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("PlaceOrder", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Entry Order&lt;span&gt; &lt;/span&gt; The Add Entry Order allows creation of an entry order in the system. There are several types of orders which are available and are defined using the OrderType and ExecutionType parameters. &lt;br&gt;&lt;br&gt; The OrderType parameter may be either Market (abbreviated by MKT) or Limit (abbreviated by LMT). &lt;br&gt;&lt;br&gt; The ExecutionType can be either Good Till Cancelled (abbreviated by GTC) or Immediate or Cancel (abbreviated by IOC) 
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The body defines the actual order

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;InstrumentID&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The Instrument ID on which the order references&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsBuy&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Is the opened position on the buy or sell side&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Leverage&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The requested leverage&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Investment&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The invested amount for the order&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The number of units to buy (either this or the investment are mandatory)&lt;/div&gt;
&lt;/div&gt;


&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution type can be either &#x27;GTC&#x27; for good till cancel orders, or &#x27;IOC&#x27; for immediate of cancel orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;LimitRate&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The limit rate. This is relevant for limit orders LMT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsTrailingStopLoss&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Should the trade be opened with a trailing stop loss&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task PlaceOrderAsync (string system, Object body = null)
        {
             await PlaceOrderAsyncWithHttpInfo(system, body);

        }

        /// <summary>
        /// Entry Order&lt;span&gt; &lt;/span&gt; The Add Entry Order allows creation of an entry order in the system. There are several types of orders which are available and are defined using the OrderType and ExecutionType parameters. &lt;br&gt;&lt;br&gt; The OrderType parameter may be either Market (abbreviated by MKT) or Limit (abbreviated by LMT). &lt;br&gt;&lt;br&gt; The ExecutionType can be either Good Till Cancelled (abbreviated by GTC) or Immediate or Cancel (abbreviated by IOC) 
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="system">The system type where the data is requested from</param>
        /// <param name="body">The body defines the actual order

&lt;div class&#x3D;&quot;panel&quot;&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;InstrumentID&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The Instrument ID on which the order references&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsBuy&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Is the opened position on the buy or sell side&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Leverage&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The requested leverage&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Investment&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The invested amount for the order&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;Units&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The number of units to buy (either this or the investment are mandatory)&lt;/div&gt;
&lt;/div&gt;


&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;OrderType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The order type can be either &#x27;MKT&#x27; for market orders or &#x27;LMT&#x27; for limit orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;ExecutionType&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;string&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The execution type can be either &#x27;GTC&#x27; for good till cancel orders, or &#x27;IOC&#x27; for immediate of cancel orders&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitRate&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit rate for the position. This property is mandatory for limit orders and market orders which are immediate or cancel&lt;/div&gt;
&lt;/div&gt;

&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;StopLossPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The stop loss percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;TakeProfitPct&lt;/label&gt;&lt;span class&#x3D;&quot;text-muted&quot;&gt;(optional)&lt;/span&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The take profit percentage for the position. This is mandatory for market orders which are good till cancelled MKT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;LimitRate&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;number&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;The limit rate. This is relevant for limit orders LMT/GTC&lt;/div&gt;
&lt;/div&gt;
&lt;div class&#x3D;&quot;row panel-body&quot;&gt;
&lt;div class&#x3D;&quot;col-md-3&quot;&gt;&lt;label&gt;IsTrailingStopLoss&lt;/label&gt;&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-1&quot;&gt;boolean&lt;/div&gt;
&lt;div class&#x3D;&quot;col-md-8&quot;&gt;Should the trade be opened with a trailing stop loss&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt; (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> PlaceOrderAsyncWithHttpInfo (string system, Object body = null)
        {
            // verify the required parameter 'system' is set
            if (system == null)
                throw new ApiException(400, "Missing required parameter 'system' when calling DefaultApi->PlaceOrder");

            var localVarPath = "/EntryOrder/{System}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (system != null) localVarPathParams.Add("System", this.Configuration.ApiClient.ParameterToString(system)); // path parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (apiKeyHeader) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key")))
            {
                localVarHeaderParams["Ocp-Apim-Subscription-Key"] = this.Configuration.GetApiKeyWithPrefix("Ocp-Apim-Subscription-Key");
            }
            // authentication (apiKeyQuery) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("subscription-key")))
            {
                localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "subscription-key", this.Configuration.GetApiKeyWithPrefix("subscription-key")));
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("PlaceOrder", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

    }
}
