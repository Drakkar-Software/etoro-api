/* 
 * User
 *
 * The User API provides data on a user including trading statistics
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        /// <summary>
        /// Test GetAggregatesHistory
        /// </summary>
        [Test]
        public void GetAggregatesHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //string period = null;
            //instance.GetAggregatesHistory(username, period);
            
        }
        /// <summary>
        /// Test GetCopiersHistory
        /// </summary>
        [Test]
        public void GetCopiersHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //string minDate = null;
            //instance.GetCopiersHistory(username, minDate);
            
        }
        /// <summary>
        /// Test GetCopySimulationData
        /// </summary>
        [Test]
        public void GetCopySimulationDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //string period = null;
            //bool? assetAllocation = null;
            //instance.GetCopySimulationData(username, period, assetAllocation);
            
        }
        /// <summary>
        /// Test GetDailyGain
        /// </summary>
        [Test]
        public void GetDailyGainTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //string type = null;
            //string minDate = null;
            //string maxDate = null;
            //instance.GetDailyGain(username, type, minDate, maxDate);
            
        }
        /// <summary>
        /// Test GetGains
        /// </summary>
        [Test]
        public void GetGainsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //instance.GetGains(username);
            
        }
        /// <summary>
        /// Test GetLiveCopiers
        /// </summary>
        [Test]
        public void GetLiveCopiersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //instance.GetLiveCopiers(username);
            
        }
        /// <summary>
        /// Test GetLiveRiskScore
        /// </summary>
        [Test]
        public void GetLiveRiskScoreTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //instance.GetLiveRiskScore(username);
            
        }
        /// <summary>
        /// Test GetRiskHistory
        /// </summary>
        [Test]
        public void GetRiskHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //string minDate = null;
            //instance.GetRiskHistory(username, minDate);
            
        }
        /// <summary>
        /// Test GetUserDiscoveryData
        /// </summary>
        [Test]
        public void GetUserDiscoveryDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //string period = null;
            //instance.GetUserDiscoveryData(username, period);
            
        }
        /// <summary>
        /// Test GetUserFollowers
        /// </summary>
        [Test]
        public void GetUserFollowersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //instance.GetUserFollowers(username);
            
        }
        /// <summary>
        /// Test GetUserInfo
        /// </summary>
        [Test]
        public void GetUserInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //instance.GetUserInfo(username);
            
        }
        /// <summary>
        /// Test GetUserPortfolioSummary
        /// </summary>
        [Test]
        public void GetUserPortfolioSummaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //instance.GetUserPortfolioSummary(username);
            
        }
        /// <summary>
        /// Test GetUserVisualPortfolio
        /// </summary>
        [Test]
        public void GetUserVisualPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //decimal? top = null;
            //instance.GetUserVisualPortfolio(username, top);
            
        }
        /// <summary>
        /// Test GetUsersDiscoveryData
        /// </summary>
        [Test]
        public void GetUsersDiscoveryDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string usernames = null;
            //string period = null;
            //string fields = null;
            //instance.GetUsersDiscoveryData(usernames, period, fields);
            
        }
        /// <summary>
        /// Test GetUsersInfo
        /// </summary>
        [Test]
        public void GetUsersInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userNames = null;
            //instance.GetUsersInfo(userNames);
            
        }
        /// <summary>
        /// Test GetUsersVisualPortfolio
        /// </summary>
        [Test]
        public void GetUsersVisualPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userNames = null;
            //instance.GetUsersVisualPortfolio(userNames);
            
        }
    }

}
